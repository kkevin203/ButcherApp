@page "/animals"

@inject AnimalService animalService;
@inject IJSRuntime JSRuntime


<h3>Animals</h3>

@if (animals == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container-fluid">
        <div class="row">
            @foreach (var animal in animals)
            {
                <div class="card" style="width: 18rem; margin: 10px;">
                    <img src="@($"uploads/{animal.PhotoPath}")" alt="Animal Image" />
                    <div class="card-body">
                        <h5 class="card-title">@animal.Name</h5>
                        <p class="card-text">@animal.Race</p>
                        <p class="card-text">@animal.FarmerName</p>
                        <a href="/DescriptionAnimal/@animal.Id" class="btn btn-primary">en voir plus</a>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    private List<Database.Entities.Animal> animals = new();

    private IJSRuntime jsRuntime { get; set; }

    private async Task changerImage(int animalId)
    {
        var imageUrl = await JSRuntime.InvokeAsync<string>("getImageUrlInputValue", $"image-url-{animalId}");
        if (!string.IsNullOrEmpty(imageUrl))
        {
            
            await jsRuntime.InvokeVoidAsync("changerImage", animalId, imageUrl);
            
        }
    }

    protected override async Task OnInitializedAsync()
    {
        animals = await animalService.GetAnimalsAsync();

        await JSRuntime.InvokeVoidAsync("console.log", "Hello from Blazor!");

    }
}
